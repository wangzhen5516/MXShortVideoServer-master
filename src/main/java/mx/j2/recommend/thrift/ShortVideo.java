/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package mx.j2.recommend.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2021-06-02")
public class ShortVideo implements org.apache.thrift.TBase<ShortVideo, ShortVideo._Fields>, java.io.Serializable, Cloneable, Comparable<ShortVideo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ShortVideo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField VIEW_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("viewCount", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField LIKE_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("likeCount", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField W_SHARE_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("wShareCount", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField DOWN_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("downCount", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField CONTENT_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("contentUrl", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField THUMBNAIL_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("thumbnailInfo", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField DOWN_LOAD_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("downLoadUrl", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField DISTANCE_FIELD_DESC = new org.apache.thrift.protocol.TField("distance", org.apache.thrift.protocol.TType.DOUBLE, (short)12);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ShortVideoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ShortVideoTupleSchemeFactory();

  public java.lang.String id; // required
  public java.lang.String type; // required
  public java.lang.String name; // required
  public long viewCount; // required
  public long likeCount; // required
  public long wShareCount; // required
  public long downCount; // required
  public java.lang.String contentUrl; // required
  public java.lang.String description; // required
  public ThumbnailInfo thumbnailInfo; // required
  public java.lang.String downLoadUrl; // required
  public double distance; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    TYPE((short)2, "type"),
    NAME((short)3, "name"),
    VIEW_COUNT((short)4, "viewCount"),
    LIKE_COUNT((short)5, "likeCount"),
    W_SHARE_COUNT((short)6, "wShareCount"),
    DOWN_COUNT((short)7, "downCount"),
    CONTENT_URL((short)8, "contentUrl"),
    DESCRIPTION((short)9, "description"),
    THUMBNAIL_INFO((short)10, "thumbnailInfo"),
    DOWN_LOAD_URL((short)11, "downLoadUrl"),
    DISTANCE((short)12, "distance");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // TYPE
          return TYPE;
        case 3: // NAME
          return NAME;
        case 4: // VIEW_COUNT
          return VIEW_COUNT;
        case 5: // LIKE_COUNT
          return LIKE_COUNT;
        case 6: // W_SHARE_COUNT
          return W_SHARE_COUNT;
        case 7: // DOWN_COUNT
          return DOWN_COUNT;
        case 8: // CONTENT_URL
          return CONTENT_URL;
        case 9: // DESCRIPTION
          return DESCRIPTION;
        case 10: // THUMBNAIL_INFO
          return THUMBNAIL_INFO;
        case 11: // DOWN_LOAD_URL
          return DOWN_LOAD_URL;
        case 12: // DISTANCE
          return DISTANCE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __VIEWCOUNT_ISSET_ID = 0;
  private static final int __LIKECOUNT_ISSET_ID = 1;
  private static final int __WSHARECOUNT_ISSET_ID = 2;
  private static final int __DOWNCOUNT_ISSET_ID = 3;
  private static final int __DISTANCE_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.DISTANCE};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VIEW_COUNT, new org.apache.thrift.meta_data.FieldMetaData("viewCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LIKE_COUNT, new org.apache.thrift.meta_data.FieldMetaData("likeCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.W_SHARE_COUNT, new org.apache.thrift.meta_data.FieldMetaData("wShareCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DOWN_COUNT, new org.apache.thrift.meta_data.FieldMetaData("downCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CONTENT_URL, new org.apache.thrift.meta_data.FieldMetaData("contentUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.THUMBNAIL_INFO, new org.apache.thrift.meta_data.FieldMetaData("thumbnailInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ThumbnailInfo.class)));
    tmpMap.put(_Fields.DOWN_LOAD_URL, new org.apache.thrift.meta_data.FieldMetaData("downLoadUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISTANCE, new org.apache.thrift.meta_data.FieldMetaData("distance", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ShortVideo.class, metaDataMap);
  }

  public ShortVideo() {
  }

  public ShortVideo(
    java.lang.String id,
    java.lang.String type,
    java.lang.String name,
    long viewCount,
    long likeCount,
    long wShareCount,
    long downCount,
    java.lang.String contentUrl,
    java.lang.String description,
    ThumbnailInfo thumbnailInfo,
    java.lang.String downLoadUrl)
  {
    this();
    this.id = id;
    this.type = type;
    this.name = name;
    this.viewCount = viewCount;
    setViewCountIsSet(true);
    this.likeCount = likeCount;
    setLikeCountIsSet(true);
    this.wShareCount = wShareCount;
    setWShareCountIsSet(true);
    this.downCount = downCount;
    setDownCountIsSet(true);
    this.contentUrl = contentUrl;
    this.description = description;
    this.thumbnailInfo = thumbnailInfo;
    this.downLoadUrl = downLoadUrl;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ShortVideo(ShortVideo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    this.viewCount = other.viewCount;
    this.likeCount = other.likeCount;
    this.wShareCount = other.wShareCount;
    this.downCount = other.downCount;
    if (other.isSetContentUrl()) {
      this.contentUrl = other.contentUrl;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetThumbnailInfo()) {
      this.thumbnailInfo = new ThumbnailInfo(other.thumbnailInfo);
    }
    if (other.isSetDownLoadUrl()) {
      this.downLoadUrl = other.downLoadUrl;
    }
    this.distance = other.distance;
  }

  public ShortVideo deepCopy() {
    return new ShortVideo(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.type = null;
    this.name = null;
    setViewCountIsSet(false);
    this.viewCount = 0;
    setLikeCountIsSet(false);
    this.likeCount = 0;
    setWShareCountIsSet(false);
    this.wShareCount = 0;
    setDownCountIsSet(false);
    this.downCount = 0;
    this.contentUrl = null;
    this.description = null;
    this.thumbnailInfo = null;
    this.downLoadUrl = null;
    setDistanceIsSet(false);
    this.distance = 0.0;
  }

  public java.lang.String getId() {
    return this.id;
  }

  public ShortVideo setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public java.lang.String getType() {
    return this.type;
  }

  public ShortVideo setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  public java.lang.String getName() {
    return this.name;
  }

  public ShortVideo setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public long getViewCount() {
    return this.viewCount;
  }

  public ShortVideo setViewCount(long viewCount) {
    this.viewCount = viewCount;
    setViewCountIsSet(true);
    return this;
  }

  public void unsetViewCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VIEWCOUNT_ISSET_ID);
  }

  /** Returns true if field viewCount is set (has been assigned a value) and false otherwise */
  public boolean isSetViewCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VIEWCOUNT_ISSET_ID);
  }

  public void setViewCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VIEWCOUNT_ISSET_ID, value);
  }

  public long getLikeCount() {
    return this.likeCount;
  }

  public ShortVideo setLikeCount(long likeCount) {
    this.likeCount = likeCount;
    setLikeCountIsSet(true);
    return this;
  }

  public void unsetLikeCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LIKECOUNT_ISSET_ID);
  }

  /** Returns true if field likeCount is set (has been assigned a value) and false otherwise */
  public boolean isSetLikeCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LIKECOUNT_ISSET_ID);
  }

  public void setLikeCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LIKECOUNT_ISSET_ID, value);
  }

  public long getWShareCount() {
    return this.wShareCount;
  }

  public ShortVideo setWShareCount(long wShareCount) {
    this.wShareCount = wShareCount;
    setWShareCountIsSet(true);
    return this;
  }

  public void unsetWShareCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __WSHARECOUNT_ISSET_ID);
  }

  /** Returns true if field wShareCount is set (has been assigned a value) and false otherwise */
  public boolean isSetWShareCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __WSHARECOUNT_ISSET_ID);
  }

  public void setWShareCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __WSHARECOUNT_ISSET_ID, value);
  }

  public long getDownCount() {
    return this.downCount;
  }

  public ShortVideo setDownCount(long downCount) {
    this.downCount = downCount;
    setDownCountIsSet(true);
    return this;
  }

  public void unsetDownCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DOWNCOUNT_ISSET_ID);
  }

  /** Returns true if field downCount is set (has been assigned a value) and false otherwise */
  public boolean isSetDownCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DOWNCOUNT_ISSET_ID);
  }

  public void setDownCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DOWNCOUNT_ISSET_ID, value);
  }

  public java.lang.String getContentUrl() {
    return this.contentUrl;
  }

  public ShortVideo setContentUrl(java.lang.String contentUrl) {
    this.contentUrl = contentUrl;
    return this;
  }

  public void unsetContentUrl() {
    this.contentUrl = null;
  }

  /** Returns true if field contentUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetContentUrl() {
    return this.contentUrl != null;
  }

  public void setContentUrlIsSet(boolean value) {
    if (!value) {
      this.contentUrl = null;
    }
  }

  public java.lang.String getDescription() {
    return this.description;
  }

  public ShortVideo setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public ThumbnailInfo getThumbnailInfo() {
    return this.thumbnailInfo;
  }

  public ShortVideo setThumbnailInfo(ThumbnailInfo thumbnailInfo) {
    this.thumbnailInfo = thumbnailInfo;
    return this;
  }

  public void unsetThumbnailInfo() {
    this.thumbnailInfo = null;
  }

  /** Returns true if field thumbnailInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetThumbnailInfo() {
    return this.thumbnailInfo != null;
  }

  public void setThumbnailInfoIsSet(boolean value) {
    if (!value) {
      this.thumbnailInfo = null;
    }
  }

  public java.lang.String getDownLoadUrl() {
    return this.downLoadUrl;
  }

  public ShortVideo setDownLoadUrl(java.lang.String downLoadUrl) {
    this.downLoadUrl = downLoadUrl;
    return this;
  }

  public void unsetDownLoadUrl() {
    this.downLoadUrl = null;
  }

  /** Returns true if field downLoadUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetDownLoadUrl() {
    return this.downLoadUrl != null;
  }

  public void setDownLoadUrlIsSet(boolean value) {
    if (!value) {
      this.downLoadUrl = null;
    }
  }

  public double getDistance() {
    return this.distance;
  }

  public ShortVideo setDistance(double distance) {
    this.distance = distance;
    setDistanceIsSet(true);
    return this;
  }

  public void unsetDistance() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISTANCE_ISSET_ID);
  }

  /** Returns true if field distance is set (has been assigned a value) and false otherwise */
  public boolean isSetDistance() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISTANCE_ISSET_ID);
  }

  public void setDistanceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISTANCE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((java.lang.String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case VIEW_COUNT:
      if (value == null) {
        unsetViewCount();
      } else {
        setViewCount((java.lang.Long)value);
      }
      break;

    case LIKE_COUNT:
      if (value == null) {
        unsetLikeCount();
      } else {
        setLikeCount((java.lang.Long)value);
      }
      break;

    case W_SHARE_COUNT:
      if (value == null) {
        unsetWShareCount();
      } else {
        setWShareCount((java.lang.Long)value);
      }
      break;

    case DOWN_COUNT:
      if (value == null) {
        unsetDownCount();
      } else {
        setDownCount((java.lang.Long)value);
      }
      break;

    case CONTENT_URL:
      if (value == null) {
        unsetContentUrl();
      } else {
        setContentUrl((java.lang.String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((java.lang.String)value);
      }
      break;

    case THUMBNAIL_INFO:
      if (value == null) {
        unsetThumbnailInfo();
      } else {
        setThumbnailInfo((ThumbnailInfo)value);
      }
      break;

    case DOWN_LOAD_URL:
      if (value == null) {
        unsetDownLoadUrl();
      } else {
        setDownLoadUrl((java.lang.String)value);
      }
      break;

    case DISTANCE:
      if (value == null) {
        unsetDistance();
      } else {
        setDistance((java.lang.Double)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case TYPE:
      return getType();

    case NAME:
      return getName();

    case VIEW_COUNT:
      return getViewCount();

    case LIKE_COUNT:
      return getLikeCount();

    case W_SHARE_COUNT:
      return getWShareCount();

    case DOWN_COUNT:
      return getDownCount();

    case CONTENT_URL:
      return getContentUrl();

    case DESCRIPTION:
      return getDescription();

    case THUMBNAIL_INFO:
      return getThumbnailInfo();

    case DOWN_LOAD_URL:
      return getDownLoadUrl();

    case DISTANCE:
      return getDistance();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case TYPE:
      return isSetType();
    case NAME:
      return isSetName();
    case VIEW_COUNT:
      return isSetViewCount();
    case LIKE_COUNT:
      return isSetLikeCount();
    case W_SHARE_COUNT:
      return isSetWShareCount();
    case DOWN_COUNT:
      return isSetDownCount();
    case CONTENT_URL:
      return isSetContentUrl();
    case DESCRIPTION:
      return isSetDescription();
    case THUMBNAIL_INFO:
      return isSetThumbnailInfo();
    case DOWN_LOAD_URL:
      return isSetDownLoadUrl();
    case DISTANCE:
      return isSetDistance();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ShortVideo)
      return this.equals((ShortVideo)that);
    return false;
  }

  public boolean equals(ShortVideo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_viewCount = true;
    boolean that_present_viewCount = true;
    if (this_present_viewCount || that_present_viewCount) {
      if (!(this_present_viewCount && that_present_viewCount))
        return false;
      if (this.viewCount != that.viewCount)
        return false;
    }

    boolean this_present_likeCount = true;
    boolean that_present_likeCount = true;
    if (this_present_likeCount || that_present_likeCount) {
      if (!(this_present_likeCount && that_present_likeCount))
        return false;
      if (this.likeCount != that.likeCount)
        return false;
    }

    boolean this_present_wShareCount = true;
    boolean that_present_wShareCount = true;
    if (this_present_wShareCount || that_present_wShareCount) {
      if (!(this_present_wShareCount && that_present_wShareCount))
        return false;
      if (this.wShareCount != that.wShareCount)
        return false;
    }

    boolean this_present_downCount = true;
    boolean that_present_downCount = true;
    if (this_present_downCount || that_present_downCount) {
      if (!(this_present_downCount && that_present_downCount))
        return false;
      if (this.downCount != that.downCount)
        return false;
    }

    boolean this_present_contentUrl = true && this.isSetContentUrl();
    boolean that_present_contentUrl = true && that.isSetContentUrl();
    if (this_present_contentUrl || that_present_contentUrl) {
      if (!(this_present_contentUrl && that_present_contentUrl))
        return false;
      if (!this.contentUrl.equals(that.contentUrl))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_thumbnailInfo = true && this.isSetThumbnailInfo();
    boolean that_present_thumbnailInfo = true && that.isSetThumbnailInfo();
    if (this_present_thumbnailInfo || that_present_thumbnailInfo) {
      if (!(this_present_thumbnailInfo && that_present_thumbnailInfo))
        return false;
      if (!this.thumbnailInfo.equals(that.thumbnailInfo))
        return false;
    }

    boolean this_present_downLoadUrl = true && this.isSetDownLoadUrl();
    boolean that_present_downLoadUrl = true && that.isSetDownLoadUrl();
    if (this_present_downLoadUrl || that_present_downLoadUrl) {
      if (!(this_present_downLoadUrl && that_present_downLoadUrl))
        return false;
      if (!this.downLoadUrl.equals(that.downLoadUrl))
        return false;
    }

    boolean this_present_distance = true && this.isSetDistance();
    boolean that_present_distance = true && that.isSetDistance();
    if (this_present_distance || that_present_distance) {
      if (!(this_present_distance && that_present_distance))
        return false;
      if (this.distance != that.distance)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + ((isSetType()) ? 131071 : 524287);
    if (isSetType())
      hashCode = hashCode * 8191 + type.hashCode();

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(viewCount);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(likeCount);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(wShareCount);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(downCount);

    hashCode = hashCode * 8191 + ((isSetContentUrl()) ? 131071 : 524287);
    if (isSetContentUrl())
      hashCode = hashCode * 8191 + contentUrl.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + description.hashCode();

    hashCode = hashCode * 8191 + ((isSetThumbnailInfo()) ? 131071 : 524287);
    if (isSetThumbnailInfo())
      hashCode = hashCode * 8191 + thumbnailInfo.hashCode();

    hashCode = hashCode * 8191 + ((isSetDownLoadUrl()) ? 131071 : 524287);
    if (isSetDownLoadUrl())
      hashCode = hashCode * 8191 + downLoadUrl.hashCode();

    hashCode = hashCode * 8191 + ((isSetDistance()) ? 131071 : 524287);
    if (isSetDistance())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(distance);

    return hashCode;
  }

  @Override
  public int compareTo(ShortVideo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetViewCount()).compareTo(other.isSetViewCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetViewCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.viewCount, other.viewCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLikeCount()).compareTo(other.isSetLikeCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLikeCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.likeCount, other.likeCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWShareCount()).compareTo(other.isSetWShareCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWShareCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wShareCount, other.wShareCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDownCount()).compareTo(other.isSetDownCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDownCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.downCount, other.downCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetContentUrl()).compareTo(other.isSetContentUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContentUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contentUrl, other.contentUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetThumbnailInfo()).compareTo(other.isSetThumbnailInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThumbnailInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thumbnailInfo, other.thumbnailInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDownLoadUrl()).compareTo(other.isSetDownLoadUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDownLoadUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.downLoadUrl, other.downLoadUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDistance()).compareTo(other.isSetDistance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistance()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.distance, other.distance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ShortVideo(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("viewCount:");
    sb.append(this.viewCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("likeCount:");
    sb.append(this.likeCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("wShareCount:");
    sb.append(this.wShareCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("downCount:");
    sb.append(this.downCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("contentUrl:");
    if (this.contentUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.contentUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("thumbnailInfo:");
    if (this.thumbnailInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.thumbnailInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("downLoadUrl:");
    if (this.downLoadUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.downLoadUrl);
    }
    first = false;
    if (isSetDistance()) {
      if (!first) sb.append(", ");
      sb.append("distance:");
      sb.append(this.distance);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (thumbnailInfo != null) {
      thumbnailInfo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ShortVideoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ShortVideoStandardScheme getScheme() {
      return new ShortVideoStandardScheme();
    }
  }

  private static class ShortVideoStandardScheme extends org.apache.thrift.scheme.StandardScheme<ShortVideo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ShortVideo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VIEW_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.viewCount = iprot.readI64();
              struct.setViewCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LIKE_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.likeCount = iprot.readI64();
              struct.setLikeCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // W_SHARE_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.wShareCount = iprot.readI64();
              struct.setWShareCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DOWN_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.downCount = iprot.readI64();
              struct.setDownCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CONTENT_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contentUrl = iprot.readString();
              struct.setContentUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // THUMBNAIL_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.thumbnailInfo = new ThumbnailInfo();
              struct.thumbnailInfo.read(iprot);
              struct.setThumbnailInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DOWN_LOAD_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.downLoadUrl = iprot.readString();
              struct.setDownLoadUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // DISTANCE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.distance = iprot.readDouble();
              struct.setDistanceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ShortVideo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeString(struct.type);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(VIEW_COUNT_FIELD_DESC);
      oprot.writeI64(struct.viewCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LIKE_COUNT_FIELD_DESC);
      oprot.writeI64(struct.likeCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(W_SHARE_COUNT_FIELD_DESC);
      oprot.writeI64(struct.wShareCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DOWN_COUNT_FIELD_DESC);
      oprot.writeI64(struct.downCount);
      oprot.writeFieldEnd();
      if (struct.contentUrl != null) {
        oprot.writeFieldBegin(CONTENT_URL_FIELD_DESC);
        oprot.writeString(struct.contentUrl);
        oprot.writeFieldEnd();
      }
      if (struct.description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.description);
        oprot.writeFieldEnd();
      }
      if (struct.thumbnailInfo != null) {
        oprot.writeFieldBegin(THUMBNAIL_INFO_FIELD_DESC);
        struct.thumbnailInfo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.downLoadUrl != null) {
        oprot.writeFieldBegin(DOWN_LOAD_URL_FIELD_DESC);
        oprot.writeString(struct.downLoadUrl);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDistance()) {
        oprot.writeFieldBegin(DISTANCE_FIELD_DESC);
        oprot.writeDouble(struct.distance);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ShortVideoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ShortVideoTupleScheme getScheme() {
      return new ShortVideoTupleScheme();
    }
  }

  private static class ShortVideoTupleScheme extends org.apache.thrift.scheme.TupleScheme<ShortVideo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ShortVideo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetType()) {
        optionals.set(1);
      }
      if (struct.isSetName()) {
        optionals.set(2);
      }
      if (struct.isSetViewCount()) {
        optionals.set(3);
      }
      if (struct.isSetLikeCount()) {
        optionals.set(4);
      }
      if (struct.isSetWShareCount()) {
        optionals.set(5);
      }
      if (struct.isSetDownCount()) {
        optionals.set(6);
      }
      if (struct.isSetContentUrl()) {
        optionals.set(7);
      }
      if (struct.isSetDescription()) {
        optionals.set(8);
      }
      if (struct.isSetThumbnailInfo()) {
        optionals.set(9);
      }
      if (struct.isSetDownLoadUrl()) {
        optionals.set(10);
      }
      if (struct.isSetDistance()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetViewCount()) {
        oprot.writeI64(struct.viewCount);
      }
      if (struct.isSetLikeCount()) {
        oprot.writeI64(struct.likeCount);
      }
      if (struct.isSetWShareCount()) {
        oprot.writeI64(struct.wShareCount);
      }
      if (struct.isSetDownCount()) {
        oprot.writeI64(struct.downCount);
      }
      if (struct.isSetContentUrl()) {
        oprot.writeString(struct.contentUrl);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetThumbnailInfo()) {
        struct.thumbnailInfo.write(oprot);
      }
      if (struct.isSetDownLoadUrl()) {
        oprot.writeString(struct.downLoadUrl);
      }
      if (struct.isSetDistance()) {
        oprot.writeDouble(struct.distance);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ShortVideo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.viewCount = iprot.readI64();
        struct.setViewCountIsSet(true);
      }
      if (incoming.get(4)) {
        struct.likeCount = iprot.readI64();
        struct.setLikeCountIsSet(true);
      }
      if (incoming.get(5)) {
        struct.wShareCount = iprot.readI64();
        struct.setWShareCountIsSet(true);
      }
      if (incoming.get(6)) {
        struct.downCount = iprot.readI64();
        struct.setDownCountIsSet(true);
      }
      if (incoming.get(7)) {
        struct.contentUrl = iprot.readString();
        struct.setContentUrlIsSet(true);
      }
      if (incoming.get(8)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(9)) {
        struct.thumbnailInfo = new ThumbnailInfo();
        struct.thumbnailInfo.read(iprot);
        struct.setThumbnailInfoIsSet(true);
      }
      if (incoming.get(10)) {
        struct.downLoadUrl = iprot.readString();
        struct.setDownLoadUrlIsSet(true);
      }
      if (incoming.get(11)) {
        struct.distance = iprot.readDouble();
        struct.setDistanceIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

