/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package mx.j2.recommend.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2021-06-02")
public class InternalShortVideo implements org.apache.thrift.TBase<InternalShortVideo, InternalShortVideo._Fields>, java.io.Serializable, Cloneable, Comparable<InternalShortVideo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("InternalShortVideo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField LIKE_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("likeInfo", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField FEAT_STAT30D_FIELD_DESC = new org.apache.thrift.protocol.TField("featStat30d", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField BIG_HEAD_FIELD_DESC = new org.apache.thrift.protocol.TField("bigHead", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ML_TAGS_FIELD_DESC = new org.apache.thrift.protocol.TField("mlTags", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField DURATION_FIELD_DESC = new org.apache.thrift.protocol.TField("duration", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField IS_DUPLICATED_FIELD_DESC = new org.apache.thrift.protocol.TField("isDuplicated", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField IS_UGC_CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("isUgcContent", org.apache.thrift.protocol.TType.BOOL, (short)8);
  private static final org.apache.thrift.protocol.TField FEAT_STAT0D_FIELD_DESC = new org.apache.thrift.protocol.TField("featStat0d", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField IS_DELOGO_FIELD_DESC = new org.apache.thrift.protocol.TField("isDelogo", org.apache.thrift.protocol.TType.I32, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new InternalShortVideoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new InternalShortVideoTupleSchemeFactory();

  public java.lang.String id; // required
  public java.lang.String likeInfo; // optional
  public java.lang.String featStat30d; // optional
  public java.lang.String bigHead; // optional
  public java.lang.String mlTags; // optional
  public java.lang.String duration; // optional
  public java.lang.String isDuplicated; // optional
  public boolean isUgcContent; // optional
  public java.lang.String featStat0d; // optional
  public int isDelogo; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    LIKE_INFO((short)2, "likeInfo"),
    FEAT_STAT30D((short)3, "featStat30d"),
    BIG_HEAD((short)4, "bigHead"),
    ML_TAGS((short)5, "mlTags"),
    DURATION((short)6, "duration"),
    IS_DUPLICATED((short)7, "isDuplicated"),
    IS_UGC_CONTENT((short)8, "isUgcContent"),
    FEAT_STAT0D((short)9, "featStat0d"),
    IS_DELOGO((short)10, "isDelogo");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // LIKE_INFO
          return LIKE_INFO;
        case 3: // FEAT_STAT30D
          return FEAT_STAT30D;
        case 4: // BIG_HEAD
          return BIG_HEAD;
        case 5: // ML_TAGS
          return ML_TAGS;
        case 6: // DURATION
          return DURATION;
        case 7: // IS_DUPLICATED
          return IS_DUPLICATED;
        case 8: // IS_UGC_CONTENT
          return IS_UGC_CONTENT;
        case 9: // FEAT_STAT0D
          return FEAT_STAT0D;
        case 10: // IS_DELOGO
          return IS_DELOGO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ISUGCCONTENT_ISSET_ID = 0;
  private static final int __ISDELOGO_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.LIKE_INFO,_Fields.FEAT_STAT30D,_Fields.BIG_HEAD,_Fields.ML_TAGS,_Fields.DURATION,_Fields.IS_DUPLICATED,_Fields.IS_UGC_CONTENT,_Fields.FEAT_STAT0D,_Fields.IS_DELOGO};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LIKE_INFO, new org.apache.thrift.meta_data.FieldMetaData("likeInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FEAT_STAT30D, new org.apache.thrift.meta_data.FieldMetaData("featStat30d", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BIG_HEAD, new org.apache.thrift.meta_data.FieldMetaData("bigHead", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ML_TAGS, new org.apache.thrift.meta_data.FieldMetaData("mlTags", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DURATION, new org.apache.thrift.meta_data.FieldMetaData("duration", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_DUPLICATED, new org.apache.thrift.meta_data.FieldMetaData("isDuplicated", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_UGC_CONTENT, new org.apache.thrift.meta_data.FieldMetaData("isUgcContent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.FEAT_STAT0D, new org.apache.thrift.meta_data.FieldMetaData("featStat0d", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_DELOGO, new org.apache.thrift.meta_data.FieldMetaData("isDelogo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(InternalShortVideo.class, metaDataMap);
  }

  public InternalShortVideo() {
  }

  public InternalShortVideo(
    java.lang.String id)
  {
    this();
    this.id = id;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public InternalShortVideo(InternalShortVideo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetLikeInfo()) {
      this.likeInfo = other.likeInfo;
    }
    if (other.isSetFeatStat30d()) {
      this.featStat30d = other.featStat30d;
    }
    if (other.isSetBigHead()) {
      this.bigHead = other.bigHead;
    }
    if (other.isSetMlTags()) {
      this.mlTags = other.mlTags;
    }
    if (other.isSetDuration()) {
      this.duration = other.duration;
    }
    if (other.isSetIsDuplicated()) {
      this.isDuplicated = other.isDuplicated;
    }
    this.isUgcContent = other.isUgcContent;
    if (other.isSetFeatStat0d()) {
      this.featStat0d = other.featStat0d;
    }
    this.isDelogo = other.isDelogo;
  }

  public InternalShortVideo deepCopy() {
    return new InternalShortVideo(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.likeInfo = null;
    this.featStat30d = null;
    this.bigHead = null;
    this.mlTags = null;
    this.duration = null;
    this.isDuplicated = null;
    setIsUgcContentIsSet(false);
    this.isUgcContent = false;
    this.featStat0d = null;
    setIsDelogoIsSet(false);
    this.isDelogo = 0;
  }

  public java.lang.String getId() {
    return this.id;
  }

  public InternalShortVideo setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public java.lang.String getLikeInfo() {
    return this.likeInfo;
  }

  public InternalShortVideo setLikeInfo(java.lang.String likeInfo) {
    this.likeInfo = likeInfo;
    return this;
  }

  public void unsetLikeInfo() {
    this.likeInfo = null;
  }

  /** Returns true if field likeInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetLikeInfo() {
    return this.likeInfo != null;
  }

  public void setLikeInfoIsSet(boolean value) {
    if (!value) {
      this.likeInfo = null;
    }
  }

  public java.lang.String getFeatStat30d() {
    return this.featStat30d;
  }

  public InternalShortVideo setFeatStat30d(java.lang.String featStat30d) {
    this.featStat30d = featStat30d;
    return this;
  }

  public void unsetFeatStat30d() {
    this.featStat30d = null;
  }

  /** Returns true if field featStat30d is set (has been assigned a value) and false otherwise */
  public boolean isSetFeatStat30d() {
    return this.featStat30d != null;
  }

  public void setFeatStat30dIsSet(boolean value) {
    if (!value) {
      this.featStat30d = null;
    }
  }

  public java.lang.String getBigHead() {
    return this.bigHead;
  }

  public InternalShortVideo setBigHead(java.lang.String bigHead) {
    this.bigHead = bigHead;
    return this;
  }

  public void unsetBigHead() {
    this.bigHead = null;
  }

  /** Returns true if field bigHead is set (has been assigned a value) and false otherwise */
  public boolean isSetBigHead() {
    return this.bigHead != null;
  }

  public void setBigHeadIsSet(boolean value) {
    if (!value) {
      this.bigHead = null;
    }
  }

  public java.lang.String getMlTags() {
    return this.mlTags;
  }

  public InternalShortVideo setMlTags(java.lang.String mlTags) {
    this.mlTags = mlTags;
    return this;
  }

  public void unsetMlTags() {
    this.mlTags = null;
  }

  /** Returns true if field mlTags is set (has been assigned a value) and false otherwise */
  public boolean isSetMlTags() {
    return this.mlTags != null;
  }

  public void setMlTagsIsSet(boolean value) {
    if (!value) {
      this.mlTags = null;
    }
  }

  public java.lang.String getDuration() {
    return this.duration;
  }

  public InternalShortVideo setDuration(java.lang.String duration) {
    this.duration = duration;
    return this;
  }

  public void unsetDuration() {
    this.duration = null;
  }

  /** Returns true if field duration is set (has been assigned a value) and false otherwise */
  public boolean isSetDuration() {
    return this.duration != null;
  }

  public void setDurationIsSet(boolean value) {
    if (!value) {
      this.duration = null;
    }
  }

  public java.lang.String getIsDuplicated() {
    return this.isDuplicated;
  }

  public InternalShortVideo setIsDuplicated(java.lang.String isDuplicated) {
    this.isDuplicated = isDuplicated;
    return this;
  }

  public void unsetIsDuplicated() {
    this.isDuplicated = null;
  }

  /** Returns true if field isDuplicated is set (has been assigned a value) and false otherwise */
  public boolean isSetIsDuplicated() {
    return this.isDuplicated != null;
  }

  public void setIsDuplicatedIsSet(boolean value) {
    if (!value) {
      this.isDuplicated = null;
    }
  }

  public boolean isIsUgcContent() {
    return this.isUgcContent;
  }

  public InternalShortVideo setIsUgcContent(boolean isUgcContent) {
    this.isUgcContent = isUgcContent;
    setIsUgcContentIsSet(true);
    return this;
  }

  public void unsetIsUgcContent() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISUGCCONTENT_ISSET_ID);
  }

  /** Returns true if field isUgcContent is set (has been assigned a value) and false otherwise */
  public boolean isSetIsUgcContent() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISUGCCONTENT_ISSET_ID);
  }

  public void setIsUgcContentIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISUGCCONTENT_ISSET_ID, value);
  }

  public java.lang.String getFeatStat0d() {
    return this.featStat0d;
  }

  public InternalShortVideo setFeatStat0d(java.lang.String featStat0d) {
    this.featStat0d = featStat0d;
    return this;
  }

  public void unsetFeatStat0d() {
    this.featStat0d = null;
  }

  /** Returns true if field featStat0d is set (has been assigned a value) and false otherwise */
  public boolean isSetFeatStat0d() {
    return this.featStat0d != null;
  }

  public void setFeatStat0dIsSet(boolean value) {
    if (!value) {
      this.featStat0d = null;
    }
  }

  public int getIsDelogo() {
    return this.isDelogo;
  }

  public InternalShortVideo setIsDelogo(int isDelogo) {
    this.isDelogo = isDelogo;
    setIsDelogoIsSet(true);
    return this;
  }

  public void unsetIsDelogo() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISDELOGO_ISSET_ID);
  }

  /** Returns true if field isDelogo is set (has been assigned a value) and false otherwise */
  public boolean isSetIsDelogo() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISDELOGO_ISSET_ID);
  }

  public void setIsDelogoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISDELOGO_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case LIKE_INFO:
      if (value == null) {
        unsetLikeInfo();
      } else {
        setLikeInfo((java.lang.String)value);
      }
      break;

    case FEAT_STAT30D:
      if (value == null) {
        unsetFeatStat30d();
      } else {
        setFeatStat30d((java.lang.String)value);
      }
      break;

    case BIG_HEAD:
      if (value == null) {
        unsetBigHead();
      } else {
        setBigHead((java.lang.String)value);
      }
      break;

    case ML_TAGS:
      if (value == null) {
        unsetMlTags();
      } else {
        setMlTags((java.lang.String)value);
      }
      break;

    case DURATION:
      if (value == null) {
        unsetDuration();
      } else {
        setDuration((java.lang.String)value);
      }
      break;

    case IS_DUPLICATED:
      if (value == null) {
        unsetIsDuplicated();
      } else {
        setIsDuplicated((java.lang.String)value);
      }
      break;

    case IS_UGC_CONTENT:
      if (value == null) {
        unsetIsUgcContent();
      } else {
        setIsUgcContent((java.lang.Boolean)value);
      }
      break;

    case FEAT_STAT0D:
      if (value == null) {
        unsetFeatStat0d();
      } else {
        setFeatStat0d((java.lang.String)value);
      }
      break;

    case IS_DELOGO:
      if (value == null) {
        unsetIsDelogo();
      } else {
        setIsDelogo((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case LIKE_INFO:
      return getLikeInfo();

    case FEAT_STAT30D:
      return getFeatStat30d();

    case BIG_HEAD:
      return getBigHead();

    case ML_TAGS:
      return getMlTags();

    case DURATION:
      return getDuration();

    case IS_DUPLICATED:
      return getIsDuplicated();

    case IS_UGC_CONTENT:
      return isIsUgcContent();

    case FEAT_STAT0D:
      return getFeatStat0d();

    case IS_DELOGO:
      return getIsDelogo();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case LIKE_INFO:
      return isSetLikeInfo();
    case FEAT_STAT30D:
      return isSetFeatStat30d();
    case BIG_HEAD:
      return isSetBigHead();
    case ML_TAGS:
      return isSetMlTags();
    case DURATION:
      return isSetDuration();
    case IS_DUPLICATED:
      return isSetIsDuplicated();
    case IS_UGC_CONTENT:
      return isSetIsUgcContent();
    case FEAT_STAT0D:
      return isSetFeatStat0d();
    case IS_DELOGO:
      return isSetIsDelogo();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof InternalShortVideo)
      return this.equals((InternalShortVideo)that);
    return false;
  }

  public boolean equals(InternalShortVideo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_likeInfo = true && this.isSetLikeInfo();
    boolean that_present_likeInfo = true && that.isSetLikeInfo();
    if (this_present_likeInfo || that_present_likeInfo) {
      if (!(this_present_likeInfo && that_present_likeInfo))
        return false;
      if (!this.likeInfo.equals(that.likeInfo))
        return false;
    }

    boolean this_present_featStat30d = true && this.isSetFeatStat30d();
    boolean that_present_featStat30d = true && that.isSetFeatStat30d();
    if (this_present_featStat30d || that_present_featStat30d) {
      if (!(this_present_featStat30d && that_present_featStat30d))
        return false;
      if (!this.featStat30d.equals(that.featStat30d))
        return false;
    }

    boolean this_present_bigHead = true && this.isSetBigHead();
    boolean that_present_bigHead = true && that.isSetBigHead();
    if (this_present_bigHead || that_present_bigHead) {
      if (!(this_present_bigHead && that_present_bigHead))
        return false;
      if (!this.bigHead.equals(that.bigHead))
        return false;
    }

    boolean this_present_mlTags = true && this.isSetMlTags();
    boolean that_present_mlTags = true && that.isSetMlTags();
    if (this_present_mlTags || that_present_mlTags) {
      if (!(this_present_mlTags && that_present_mlTags))
        return false;
      if (!this.mlTags.equals(that.mlTags))
        return false;
    }

    boolean this_present_duration = true && this.isSetDuration();
    boolean that_present_duration = true && that.isSetDuration();
    if (this_present_duration || that_present_duration) {
      if (!(this_present_duration && that_present_duration))
        return false;
      if (!this.duration.equals(that.duration))
        return false;
    }

    boolean this_present_isDuplicated = true && this.isSetIsDuplicated();
    boolean that_present_isDuplicated = true && that.isSetIsDuplicated();
    if (this_present_isDuplicated || that_present_isDuplicated) {
      if (!(this_present_isDuplicated && that_present_isDuplicated))
        return false;
      if (!this.isDuplicated.equals(that.isDuplicated))
        return false;
    }

    boolean this_present_isUgcContent = true && this.isSetIsUgcContent();
    boolean that_present_isUgcContent = true && that.isSetIsUgcContent();
    if (this_present_isUgcContent || that_present_isUgcContent) {
      if (!(this_present_isUgcContent && that_present_isUgcContent))
        return false;
      if (this.isUgcContent != that.isUgcContent)
        return false;
    }

    boolean this_present_featStat0d = true && this.isSetFeatStat0d();
    boolean that_present_featStat0d = true && that.isSetFeatStat0d();
    if (this_present_featStat0d || that_present_featStat0d) {
      if (!(this_present_featStat0d && that_present_featStat0d))
        return false;
      if (!this.featStat0d.equals(that.featStat0d))
        return false;
    }

    boolean this_present_isDelogo = true && this.isSetIsDelogo();
    boolean that_present_isDelogo = true && that.isSetIsDelogo();
    if (this_present_isDelogo || that_present_isDelogo) {
      if (!(this_present_isDelogo && that_present_isDelogo))
        return false;
      if (this.isDelogo != that.isDelogo)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + ((isSetLikeInfo()) ? 131071 : 524287);
    if (isSetLikeInfo())
      hashCode = hashCode * 8191 + likeInfo.hashCode();

    hashCode = hashCode * 8191 + ((isSetFeatStat30d()) ? 131071 : 524287);
    if (isSetFeatStat30d())
      hashCode = hashCode * 8191 + featStat30d.hashCode();

    hashCode = hashCode * 8191 + ((isSetBigHead()) ? 131071 : 524287);
    if (isSetBigHead())
      hashCode = hashCode * 8191 + bigHead.hashCode();

    hashCode = hashCode * 8191 + ((isSetMlTags()) ? 131071 : 524287);
    if (isSetMlTags())
      hashCode = hashCode * 8191 + mlTags.hashCode();

    hashCode = hashCode * 8191 + ((isSetDuration()) ? 131071 : 524287);
    if (isSetDuration())
      hashCode = hashCode * 8191 + duration.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsDuplicated()) ? 131071 : 524287);
    if (isSetIsDuplicated())
      hashCode = hashCode * 8191 + isDuplicated.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsUgcContent()) ? 131071 : 524287);
    if (isSetIsUgcContent())
      hashCode = hashCode * 8191 + ((isUgcContent) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetFeatStat0d()) ? 131071 : 524287);
    if (isSetFeatStat0d())
      hashCode = hashCode * 8191 + featStat0d.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsDelogo()) ? 131071 : 524287);
    if (isSetIsDelogo())
      hashCode = hashCode * 8191 + isDelogo;

    return hashCode;
  }

  @Override
  public int compareTo(InternalShortVideo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLikeInfo()).compareTo(other.isSetLikeInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLikeInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.likeInfo, other.likeInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFeatStat30d()).compareTo(other.isSetFeatStat30d());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeatStat30d()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.featStat30d, other.featStat30d);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBigHead()).compareTo(other.isSetBigHead());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBigHead()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bigHead, other.bigHead);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMlTags()).compareTo(other.isSetMlTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMlTags()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mlTags, other.mlTags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDuration()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsDuplicated()).compareTo(other.isSetIsDuplicated());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsDuplicated()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isDuplicated, other.isDuplicated);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsUgcContent()).compareTo(other.isSetIsUgcContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsUgcContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isUgcContent, other.isUgcContent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFeatStat0d()).compareTo(other.isSetFeatStat0d());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeatStat0d()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.featStat0d, other.featStat0d);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsDelogo()).compareTo(other.isSetIsDelogo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsDelogo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isDelogo, other.isDelogo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("InternalShortVideo(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (isSetLikeInfo()) {
      if (!first) sb.append(", ");
      sb.append("likeInfo:");
      if (this.likeInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.likeInfo);
      }
      first = false;
    }
    if (isSetFeatStat30d()) {
      if (!first) sb.append(", ");
      sb.append("featStat30d:");
      if (this.featStat30d == null) {
        sb.append("null");
      } else {
        sb.append(this.featStat30d);
      }
      first = false;
    }
    if (isSetBigHead()) {
      if (!first) sb.append(", ");
      sb.append("bigHead:");
      if (this.bigHead == null) {
        sb.append("null");
      } else {
        sb.append(this.bigHead);
      }
      first = false;
    }
    if (isSetMlTags()) {
      if (!first) sb.append(", ");
      sb.append("mlTags:");
      if (this.mlTags == null) {
        sb.append("null");
      } else {
        sb.append(this.mlTags);
      }
      first = false;
    }
    if (isSetDuration()) {
      if (!first) sb.append(", ");
      sb.append("duration:");
      if (this.duration == null) {
        sb.append("null");
      } else {
        sb.append(this.duration);
      }
      first = false;
    }
    if (isSetIsDuplicated()) {
      if (!first) sb.append(", ");
      sb.append("isDuplicated:");
      if (this.isDuplicated == null) {
        sb.append("null");
      } else {
        sb.append(this.isDuplicated);
      }
      first = false;
    }
    if (isSetIsUgcContent()) {
      if (!first) sb.append(", ");
      sb.append("isUgcContent:");
      sb.append(this.isUgcContent);
      first = false;
    }
    if (isSetFeatStat0d()) {
      if (!first) sb.append(", ");
      sb.append("featStat0d:");
      if (this.featStat0d == null) {
        sb.append("null");
      } else {
        sb.append(this.featStat0d);
      }
      first = false;
    }
    if (isSetIsDelogo()) {
      if (!first) sb.append(", ");
      sb.append("isDelogo:");
      sb.append(this.isDelogo);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class InternalShortVideoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public InternalShortVideoStandardScheme getScheme() {
      return new InternalShortVideoStandardScheme();
    }
  }

  private static class InternalShortVideoStandardScheme extends org.apache.thrift.scheme.StandardScheme<InternalShortVideo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, InternalShortVideo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // LIKE_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.likeInfo = iprot.readString();
              struct.setLikeInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FEAT_STAT30D
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.featStat30d = iprot.readString();
              struct.setFeatStat30dIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BIG_HEAD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bigHead = iprot.readString();
              struct.setBigHeadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ML_TAGS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mlTags = iprot.readString();
              struct.setMlTagsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DURATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.duration = iprot.readString();
              struct.setDurationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // IS_DUPLICATED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.isDuplicated = iprot.readString();
              struct.setIsDuplicatedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // IS_UGC_CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isUgcContent = iprot.readBool();
              struct.setIsUgcContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // FEAT_STAT0D
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.featStat0d = iprot.readString();
              struct.setFeatStat0dIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // IS_DELOGO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.isDelogo = iprot.readI32();
              struct.setIsDelogoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, InternalShortVideo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.likeInfo != null) {
        if (struct.isSetLikeInfo()) {
          oprot.writeFieldBegin(LIKE_INFO_FIELD_DESC);
          oprot.writeString(struct.likeInfo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.featStat30d != null) {
        if (struct.isSetFeatStat30d()) {
          oprot.writeFieldBegin(FEAT_STAT30D_FIELD_DESC);
          oprot.writeString(struct.featStat30d);
          oprot.writeFieldEnd();
        }
      }
      if (struct.bigHead != null) {
        if (struct.isSetBigHead()) {
          oprot.writeFieldBegin(BIG_HEAD_FIELD_DESC);
          oprot.writeString(struct.bigHead);
          oprot.writeFieldEnd();
        }
      }
      if (struct.mlTags != null) {
        if (struct.isSetMlTags()) {
          oprot.writeFieldBegin(ML_TAGS_FIELD_DESC);
          oprot.writeString(struct.mlTags);
          oprot.writeFieldEnd();
        }
      }
      if (struct.duration != null) {
        if (struct.isSetDuration()) {
          oprot.writeFieldBegin(DURATION_FIELD_DESC);
          oprot.writeString(struct.duration);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isDuplicated != null) {
        if (struct.isSetIsDuplicated()) {
          oprot.writeFieldBegin(IS_DUPLICATED_FIELD_DESC);
          oprot.writeString(struct.isDuplicated);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsUgcContent()) {
        oprot.writeFieldBegin(IS_UGC_CONTENT_FIELD_DESC);
        oprot.writeBool(struct.isUgcContent);
        oprot.writeFieldEnd();
      }
      if (struct.featStat0d != null) {
        if (struct.isSetFeatStat0d()) {
          oprot.writeFieldBegin(FEAT_STAT0D_FIELD_DESC);
          oprot.writeString(struct.featStat0d);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsDelogo()) {
        oprot.writeFieldBegin(IS_DELOGO_FIELD_DESC);
        oprot.writeI32(struct.isDelogo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class InternalShortVideoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public InternalShortVideoTupleScheme getScheme() {
      return new InternalShortVideoTupleScheme();
    }
  }

  private static class InternalShortVideoTupleScheme extends org.apache.thrift.scheme.TupleScheme<InternalShortVideo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, InternalShortVideo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetLikeInfo()) {
        optionals.set(1);
      }
      if (struct.isSetFeatStat30d()) {
        optionals.set(2);
      }
      if (struct.isSetBigHead()) {
        optionals.set(3);
      }
      if (struct.isSetMlTags()) {
        optionals.set(4);
      }
      if (struct.isSetDuration()) {
        optionals.set(5);
      }
      if (struct.isSetIsDuplicated()) {
        optionals.set(6);
      }
      if (struct.isSetIsUgcContent()) {
        optionals.set(7);
      }
      if (struct.isSetFeatStat0d()) {
        optionals.set(8);
      }
      if (struct.isSetIsDelogo()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetLikeInfo()) {
        oprot.writeString(struct.likeInfo);
      }
      if (struct.isSetFeatStat30d()) {
        oprot.writeString(struct.featStat30d);
      }
      if (struct.isSetBigHead()) {
        oprot.writeString(struct.bigHead);
      }
      if (struct.isSetMlTags()) {
        oprot.writeString(struct.mlTags);
      }
      if (struct.isSetDuration()) {
        oprot.writeString(struct.duration);
      }
      if (struct.isSetIsDuplicated()) {
        oprot.writeString(struct.isDuplicated);
      }
      if (struct.isSetIsUgcContent()) {
        oprot.writeBool(struct.isUgcContent);
      }
      if (struct.isSetFeatStat0d()) {
        oprot.writeString(struct.featStat0d);
      }
      if (struct.isSetIsDelogo()) {
        oprot.writeI32(struct.isDelogo);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, InternalShortVideo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.likeInfo = iprot.readString();
        struct.setLikeInfoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.featStat30d = iprot.readString();
        struct.setFeatStat30dIsSet(true);
      }
      if (incoming.get(3)) {
        struct.bigHead = iprot.readString();
        struct.setBigHeadIsSet(true);
      }
      if (incoming.get(4)) {
        struct.mlTags = iprot.readString();
        struct.setMlTagsIsSet(true);
      }
      if (incoming.get(5)) {
        struct.duration = iprot.readString();
        struct.setDurationIsSet(true);
      }
      if (incoming.get(6)) {
        struct.isDuplicated = iprot.readString();
        struct.setIsDuplicatedIsSet(true);
      }
      if (incoming.get(7)) {
        struct.isUgcContent = iprot.readBool();
        struct.setIsUgcContentIsSet(true);
      }
      if (incoming.get(8)) {
        struct.featStat0d = iprot.readString();
        struct.setFeatStat0dIsSet(true);
      }
      if (incoming.get(9)) {
        struct.isDelogo = iprot.readI32();
        struct.setIsDelogoIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

