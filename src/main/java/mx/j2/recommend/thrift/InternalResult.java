/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package mx.j2.recommend.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2021-06-02")
public class InternalResult implements org.apache.thrift.TBase<InternalResult, InternalResult._Fields>, java.io.Serializable, Cloneable, Comparable<InternalResult> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("InternalResult");

  private static final org.apache.thrift.protocol.TField PUBLISHER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("publisherId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("num", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField VIDEO_ID_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("videoIdList", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField INTERNAL_SHORT_VIDEO_FIELD_DESC = new org.apache.thrift.protocol.TField("internalShortVideo", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField FILTER_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("filterInfo", org.apache.thrift.protocol.TType.STRING, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new InternalResultStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new InternalResultTupleSchemeFactory();

  public java.lang.String publisherId; // required
  public int num; // required
  public java.util.List<java.lang.String> videoIdList; // optional
  public InternalShortVideo internalShortVideo; // optional
  public java.lang.String filterInfo; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PUBLISHER_ID((short)1, "publisherId"),
    NUM((short)2, "num"),
    VIDEO_ID_LIST((short)3, "videoIdList"),
    INTERNAL_SHORT_VIDEO((short)4, "internalShortVideo"),
    FILTER_INFO((short)5, "filterInfo");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PUBLISHER_ID
          return PUBLISHER_ID;
        case 2: // NUM
          return NUM;
        case 3: // VIDEO_ID_LIST
          return VIDEO_ID_LIST;
        case 4: // INTERNAL_SHORT_VIDEO
          return INTERNAL_SHORT_VIDEO;
        case 5: // FILTER_INFO
          return FILTER_INFO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __NUM_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.VIDEO_ID_LIST,_Fields.INTERNAL_SHORT_VIDEO,_Fields.FILTER_INFO};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PUBLISHER_ID, new org.apache.thrift.meta_data.FieldMetaData("publisherId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUM, new org.apache.thrift.meta_data.FieldMetaData("num", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VIDEO_ID_LIST, new org.apache.thrift.meta_data.FieldMetaData("videoIdList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.INTERNAL_SHORT_VIDEO, new org.apache.thrift.meta_data.FieldMetaData("internalShortVideo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT        , "InternalShortVideo")));
    tmpMap.put(_Fields.FILTER_INFO, new org.apache.thrift.meta_data.FieldMetaData("filterInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(InternalResult.class, metaDataMap);
  }

  public InternalResult() {
  }

  public InternalResult(
    java.lang.String publisherId,
    int num)
  {
    this();
    this.publisherId = publisherId;
    this.num = num;
    setNumIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public InternalResult(InternalResult other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetPublisherId()) {
      this.publisherId = other.publisherId;
    }
    this.num = other.num;
    if (other.isSetVideoIdList()) {
      java.util.List<java.lang.String> __this__videoIdList = new java.util.ArrayList<java.lang.String>(other.videoIdList);
      this.videoIdList = __this__videoIdList;
    }
    if (other.isSetInternalShortVideo()) {
      this.internalShortVideo = new InternalShortVideo(other.internalShortVideo);
    }
    if (other.isSetFilterInfo()) {
      this.filterInfo = other.filterInfo;
    }
  }

  public InternalResult deepCopy() {
    return new InternalResult(this);
  }

  @Override
  public void clear() {
    this.publisherId = null;
    setNumIsSet(false);
    this.num = 0;
    this.videoIdList = null;
    this.internalShortVideo = null;
    this.filterInfo = null;
  }

  public java.lang.String getPublisherId() {
    return this.publisherId;
  }

  public InternalResult setPublisherId(java.lang.String publisherId) {
    this.publisherId = publisherId;
    return this;
  }

  public void unsetPublisherId() {
    this.publisherId = null;
  }

  /** Returns true if field publisherId is set (has been assigned a value) and false otherwise */
  public boolean isSetPublisherId() {
    return this.publisherId != null;
  }

  public void setPublisherIdIsSet(boolean value) {
    if (!value) {
      this.publisherId = null;
    }
  }

  public int getNum() {
    return this.num;
  }

  public InternalResult setNum(int num) {
    this.num = num;
    setNumIsSet(true);
    return this;
  }

  public void unsetNum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUM_ISSET_ID);
  }

  /** Returns true if field num is set (has been assigned a value) and false otherwise */
  public boolean isSetNum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUM_ISSET_ID);
  }

  public void setNumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUM_ISSET_ID, value);
  }

  public int getVideoIdListSize() {
    return (this.videoIdList == null) ? 0 : this.videoIdList.size();
  }

  public java.util.Iterator<java.lang.String> getVideoIdListIterator() {
    return (this.videoIdList == null) ? null : this.videoIdList.iterator();
  }

  public void addToVideoIdList(java.lang.String elem) {
    if (this.videoIdList == null) {
      this.videoIdList = new java.util.ArrayList<java.lang.String>();
    }
    this.videoIdList.add(elem);
  }

  public java.util.List<java.lang.String> getVideoIdList() {
    return this.videoIdList;
  }

  public InternalResult setVideoIdList(java.util.List<java.lang.String> videoIdList) {
    this.videoIdList = videoIdList;
    return this;
  }

  public void unsetVideoIdList() {
    this.videoIdList = null;
  }

  /** Returns true if field videoIdList is set (has been assigned a value) and false otherwise */
  public boolean isSetVideoIdList() {
    return this.videoIdList != null;
  }

  public void setVideoIdListIsSet(boolean value) {
    if (!value) {
      this.videoIdList = null;
    }
  }

  public InternalShortVideo getInternalShortVideo() {
    return this.internalShortVideo;
  }

  public InternalResult setInternalShortVideo(InternalShortVideo internalShortVideo) {
    this.internalShortVideo = internalShortVideo;
    return this;
  }

  public void unsetInternalShortVideo() {
    this.internalShortVideo = null;
  }

  /** Returns true if field internalShortVideo is set (has been assigned a value) and false otherwise */
  public boolean isSetInternalShortVideo() {
    return this.internalShortVideo != null;
  }

  public void setInternalShortVideoIsSet(boolean value) {
    if (!value) {
      this.internalShortVideo = null;
    }
  }

  public java.lang.String getFilterInfo() {
    return this.filterInfo;
  }

  public InternalResult setFilterInfo(java.lang.String filterInfo) {
    this.filterInfo = filterInfo;
    return this;
  }

  public void unsetFilterInfo() {
    this.filterInfo = null;
  }

  /** Returns true if field filterInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetFilterInfo() {
    return this.filterInfo != null;
  }

  public void setFilterInfoIsSet(boolean value) {
    if (!value) {
      this.filterInfo = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case PUBLISHER_ID:
      if (value == null) {
        unsetPublisherId();
      } else {
        setPublisherId((java.lang.String)value);
      }
      break;

    case NUM:
      if (value == null) {
        unsetNum();
      } else {
        setNum((java.lang.Integer)value);
      }
      break;

    case VIDEO_ID_LIST:
      if (value == null) {
        unsetVideoIdList();
      } else {
        setVideoIdList((java.util.List<java.lang.String>)value);
      }
      break;

    case INTERNAL_SHORT_VIDEO:
      if (value == null) {
        unsetInternalShortVideo();
      } else {
        setInternalShortVideo((InternalShortVideo)value);
      }
      break;

    case FILTER_INFO:
      if (value == null) {
        unsetFilterInfo();
      } else {
        setFilterInfo((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case PUBLISHER_ID:
      return getPublisherId();

    case NUM:
      return getNum();

    case VIDEO_ID_LIST:
      return getVideoIdList();

    case INTERNAL_SHORT_VIDEO:
      return getInternalShortVideo();

    case FILTER_INFO:
      return getFilterInfo();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case PUBLISHER_ID:
      return isSetPublisherId();
    case NUM:
      return isSetNum();
    case VIDEO_ID_LIST:
      return isSetVideoIdList();
    case INTERNAL_SHORT_VIDEO:
      return isSetInternalShortVideo();
    case FILTER_INFO:
      return isSetFilterInfo();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof InternalResult)
      return this.equals((InternalResult)that);
    return false;
  }

  public boolean equals(InternalResult that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_publisherId = true && this.isSetPublisherId();
    boolean that_present_publisherId = true && that.isSetPublisherId();
    if (this_present_publisherId || that_present_publisherId) {
      if (!(this_present_publisherId && that_present_publisherId))
        return false;
      if (!this.publisherId.equals(that.publisherId))
        return false;
    }

    boolean this_present_num = true;
    boolean that_present_num = true;
    if (this_present_num || that_present_num) {
      if (!(this_present_num && that_present_num))
        return false;
      if (this.num != that.num)
        return false;
    }

    boolean this_present_videoIdList = true && this.isSetVideoIdList();
    boolean that_present_videoIdList = true && that.isSetVideoIdList();
    if (this_present_videoIdList || that_present_videoIdList) {
      if (!(this_present_videoIdList && that_present_videoIdList))
        return false;
      if (!this.videoIdList.equals(that.videoIdList))
        return false;
    }

    boolean this_present_internalShortVideo = true && this.isSetInternalShortVideo();
    boolean that_present_internalShortVideo = true && that.isSetInternalShortVideo();
    if (this_present_internalShortVideo || that_present_internalShortVideo) {
      if (!(this_present_internalShortVideo && that_present_internalShortVideo))
        return false;
      if (!this.internalShortVideo.equals(that.internalShortVideo))
        return false;
    }

    boolean this_present_filterInfo = true && this.isSetFilterInfo();
    boolean that_present_filterInfo = true && that.isSetFilterInfo();
    if (this_present_filterInfo || that_present_filterInfo) {
      if (!(this_present_filterInfo && that_present_filterInfo))
        return false;
      if (!this.filterInfo.equals(that.filterInfo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetPublisherId()) ? 131071 : 524287);
    if (isSetPublisherId())
      hashCode = hashCode * 8191 + publisherId.hashCode();

    hashCode = hashCode * 8191 + num;

    hashCode = hashCode * 8191 + ((isSetVideoIdList()) ? 131071 : 524287);
    if (isSetVideoIdList())
      hashCode = hashCode * 8191 + videoIdList.hashCode();

    hashCode = hashCode * 8191 + ((isSetInternalShortVideo()) ? 131071 : 524287);
    if (isSetInternalShortVideo())
      hashCode = hashCode * 8191 + internalShortVideo.hashCode();

    hashCode = hashCode * 8191 + ((isSetFilterInfo()) ? 131071 : 524287);
    if (isSetFilterInfo())
      hashCode = hashCode * 8191 + filterInfo.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(InternalResult other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetPublisherId()).compareTo(other.isSetPublisherId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublisherId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publisherId, other.publisherId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNum()).compareTo(other.isSetNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.num, other.num);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetVideoIdList()).compareTo(other.isSetVideoIdList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVideoIdList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.videoIdList, other.videoIdList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetInternalShortVideo()).compareTo(other.isSetInternalShortVideo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInternalShortVideo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.internalShortVideo, other.internalShortVideo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFilterInfo()).compareTo(other.isSetFilterInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFilterInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterInfo, other.filterInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("InternalResult(");
    boolean first = true;

    sb.append("publisherId:");
    if (this.publisherId == null) {
      sb.append("null");
    } else {
      sb.append(this.publisherId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("num:");
    sb.append(this.num);
    first = false;
    if (isSetVideoIdList()) {
      if (!first) sb.append(", ");
      sb.append("videoIdList:");
      if (this.videoIdList == null) {
        sb.append("null");
      } else {
        sb.append(this.videoIdList);
      }
      first = false;
    }
    if (isSetInternalShortVideo()) {
      if (!first) sb.append(", ");
      sb.append("internalShortVideo:");
      if (this.internalShortVideo == null) {
        sb.append("null");
      } else {
        sb.append(this.internalShortVideo);
      }
      first = false;
    }
    if (isSetFilterInfo()) {
      if (!first) sb.append(", ");
      sb.append("filterInfo:");
      if (this.filterInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.filterInfo);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class InternalResultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public InternalResultStandardScheme getScheme() {
      return new InternalResultStandardScheme();
    }
  }

  private static class InternalResultStandardScheme extends org.apache.thrift.scheme.StandardScheme<InternalResult> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, InternalResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PUBLISHER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.publisherId = iprot.readString();
              struct.setPublisherIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.num = iprot.readI32();
              struct.setNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // VIDEO_ID_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list168 = iprot.readListBegin();
                struct.videoIdList = new java.util.ArrayList<java.lang.String>(_list168.size);
                java.lang.String _elem169;
                for (int _i170 = 0; _i170 < _list168.size; ++_i170)
                {
                  _elem169 = iprot.readString();
                  struct.videoIdList.add(_elem169);
                }
                iprot.readListEnd();
              }
              struct.setVideoIdListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // INTERNAL_SHORT_VIDEO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.internalShortVideo = new InternalShortVideo();
              struct.internalShortVideo.read(iprot);
              struct.setInternalShortVideoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FILTER_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.filterInfo = iprot.readString();
              struct.setFilterInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, InternalResult struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.publisherId != null) {
        oprot.writeFieldBegin(PUBLISHER_ID_FIELD_DESC);
        oprot.writeString(struct.publisherId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(NUM_FIELD_DESC);
      oprot.writeI32(struct.num);
      oprot.writeFieldEnd();
      if (struct.videoIdList != null) {
        if (struct.isSetVideoIdList()) {
          oprot.writeFieldBegin(VIDEO_ID_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.videoIdList.size()));
            for (java.lang.String _iter171 : struct.videoIdList)
            {
              oprot.writeString(_iter171);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.internalShortVideo != null) {
        if (struct.isSetInternalShortVideo()) {
          oprot.writeFieldBegin(INTERNAL_SHORT_VIDEO_FIELD_DESC);
          struct.internalShortVideo.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.filterInfo != null) {
        if (struct.isSetFilterInfo()) {
          oprot.writeFieldBegin(FILTER_INFO_FIELD_DESC);
          oprot.writeString(struct.filterInfo);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class InternalResultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public InternalResultTupleScheme getScheme() {
      return new InternalResultTupleScheme();
    }
  }

  private static class InternalResultTupleScheme extends org.apache.thrift.scheme.TupleScheme<InternalResult> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, InternalResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetPublisherId()) {
        optionals.set(0);
      }
      if (struct.isSetNum()) {
        optionals.set(1);
      }
      if (struct.isSetVideoIdList()) {
        optionals.set(2);
      }
      if (struct.isSetInternalShortVideo()) {
        optionals.set(3);
      }
      if (struct.isSetFilterInfo()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetPublisherId()) {
        oprot.writeString(struct.publisherId);
      }
      if (struct.isSetNum()) {
        oprot.writeI32(struct.num);
      }
      if (struct.isSetVideoIdList()) {
        {
          oprot.writeI32(struct.videoIdList.size());
          for (java.lang.String _iter172 : struct.videoIdList)
          {
            oprot.writeString(_iter172);
          }
        }
      }
      if (struct.isSetInternalShortVideo()) {
        struct.internalShortVideo.write(oprot);
      }
      if (struct.isSetFilterInfo()) {
        oprot.writeString(struct.filterInfo);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, InternalResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.publisherId = iprot.readString();
        struct.setPublisherIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.num = iprot.readI32();
        struct.setNumIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list173 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.videoIdList = new java.util.ArrayList<java.lang.String>(_list173.size);
          java.lang.String _elem174;
          for (int _i175 = 0; _i175 < _list173.size; ++_i175)
          {
            _elem174 = iprot.readString();
            struct.videoIdList.add(_elem174);
          }
        }
        struct.setVideoIdListIsSet(true);
      }
      if (incoming.get(3)) {
        struct.internalShortVideo = new InternalShortVideo();
        struct.internalShortVideo.read(iprot);
        struct.setInternalShortVideoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.filterInfo = iprot.readString();
        struct.setFilterInfoIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

